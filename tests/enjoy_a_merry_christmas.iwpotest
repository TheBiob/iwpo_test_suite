; Tests for:
;  Save sharing
;  Saved message instance existing after receiving an online save
;  Deleting online saves when player saves
;  save-delay preventing multiple save messages to the server when game autosaves every frame
;  save sharing between rooms

; Not currently tested:
;  gravity flipping (engine does not contain gravity flippers)
;  other player being visible and correctly oriented when facing left/right etc
;  chat messages
;  disable online saves feature

[configuration]
folder=enjoy_a_merry_christmas
game=I wanna enjoy a Merry Christmas.exe
output=I wanna enjoy a Merry Christmas_online.exe
is_gms=false
skip_execute=false

; The way the new game option works seems to be by detecting an error when reading the save file (after deleting the file). This error is expected to be in the end result.
expected_error[]=ERROR in
expected_error[]=action number 1
expected_error[]=of Create Event
expected_error[]=for object init:
expected_error[]=
expected_error[]=Error reading byte.

[server_packages]
; save_game is the package we expect the client to send, it does not contain it's own name
save_game=TCP 05 00 000003E0 855.4 0070
save_game2=TCP 05 00 00000380 2144.0 0094

; package from another player that saved that the server would send, which additionally contains the name of the player
saved_1745_791=TCP 05 00 "test2" 000006D1 791.0 0070

; rStage01 - 112 (0x70)
; room148  - 148 (0x94)

[events]
$$pre_worldCreate
	@name="Test";
	@password="";
	@race=false;

$$post_TestGameBegin
	@step = 0;

$$post_TestStep
	@step += 1;

	if (@step == 5) {
		global.load=1;
		room_goto(rInit);
	} else if (@step == 10) {
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		@SERVER_EXPECT("save_game");
		with (player) {
			x = 992;
			y = 855.4;
		}
		// Same thing the save point does, though in Step instead of On Collision with Bullet and without screenshots, save traps or boss checks
		saveGame(0);
	} else if (@step == 12) {
		@SERVER_RESPOND("saved_1745_791");
	} else if (@step == 14) {
		if (instance_number(@playerSaved) != 1) {
			@ASSERTEQ(1, instance_number(@playerSaved), "saved instance count", false); // Will fail
		} else {
			@ASSERTEQ("test2 saved!", @playerSaved.@text, "saved text", false);
		}
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all2();
		loadGame();
	} else if (@step == 16) {
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		@ASSERTEQ(1745,  player.x, "player x 1", false);
		@ASSERTEQ(791.4, player.y, "player y 1", false);
		@ASSERTEQ(rStage01, room, "room 1", false);
	} else if (@step == 18) {
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all2();
		loadGame();
	} else if (@step == 20) {
		// We loaded again without saving, player should be back on the original save
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		@ASSERTEQ(992,   player.x, "player x 2", false);
		@ASSERTEQ(855.4, player.y, "player y 2", false); // Seems like falling starts 1 frame later when loading an online save? Would've expected to see 1760+0.4+0.4*2 here instead.
		@ASSERTEQ(rStage01, room, "room 2", false);		

		@SERVER_RESPOND("saved_1745_791");
	} else if (@step == 22) {
		@ASSERT(world.@sSaved, "no online save received", false);
		
		// Same thing the save point does, though in Step instead of On Collision with Bullet
		saveGame(0);
	} else if (@step == 24) {
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all2();
		loadGame();
	} else if (@step == 26) {
		// We received an online save, but then saved ourselves, reloading should take us to our save
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		@ASSERTEQ(992,   player.x, "player x 3", false);
		@ASSERTEQ(855.4, player.y, "player y 3", false);
		@ASSERTEQ(rStage01, room, "room 3", false);		
	} else if (@step == 28) {
		// Location is inside a block so we don't expect x/y to change when the saving starts happening.
		room_goto(room148);
		with (player) {
			x = 896;
			y = 2144.0;
			xprevious = x;
			yprevious = y;
		}
		// Note: I was considering changing this behavior to send a new save every couple of frames instead of only once.
		// This test will break when that happens and needs to be adjusted.
		// First a save_game2 is expected (once, not being repeated for every frame)
		@SERVER_EXPECT("save_game2");
		// then a save_game after a short delay of not saving and moving back to the 992, 855.4 location
		@SERVER_EXPECT("save_game");
	} else if (@step > 30 && @step < 80) {
		// Save every frame for 50 frames, to test for the save delay working and autosaves like that not kicking the player
		saveGame(0); // Same thing the save point does, though in Step instead of On Collision with Bullet
	} else if (@step == 85) {
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		room_goto(rStage01);
		with (player) {
			x = 992;
			y = 855.4;
		}
	} else if (@step == 87) { // Delay saving a bit so that the room updates
		// Same thing the save point does, though in Step instead of On Collision with Bullet
		saveGame(0);
	} else if (@step == 90) {
		@PASS();
	}
