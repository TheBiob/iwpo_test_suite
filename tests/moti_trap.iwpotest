; Tests for:
;  Save sharing
;  Saved message instance existing after receiving an online save
;  Deleting online saves when player saves
;  save-delay preventing multiple save messages to the server when game autosaves every frame
;  save sharing between rooms

; Not currently tested:
;  gravity flipping (engine does not contain gravity flippers)
;  other player being visible and correctly oriented when facing left/right etc
;  chat messages
;  disable online saves feature

[configuration]
folder=moti_trap
game=moti_trapv0.4.exe
output=moti_trapv0.4_online.exe
is_gms=false
skip_execute=false

[server_packages]
; save_game is the package we expect the client to send, it does not contain it's own name
save_game=TCP 05 00 000000C0 1760.0 0070
save_game2=TCP 05 00 00000080 1472.5 0070
; saved_384_1760 is the package from another player that saved that the server would send, which additionally contains the name of the player
saved_384_1760=TCP 05 00 "test2" 00000180 1760.0 008B
; room 112 (0x70) => rStage01
; room 139 (0x8B) => rBossBigCherry_sample

[events]
$$script_ASSERT_LOCATION_1
	@ASSERT(instance_exists(player), "object 'player' does not exist", true);
	@ASSERTEQ(384,    player.x, "player x 1", false);
	@ASSERTEQ(1760.4, player.y, "player y 1", false);
	@ASSERTEQ(rBossBigCherry_sample, room, "room 1", false);

$$script_ASSERT_LOCATION_2
	@ASSERT(instance_exists(player), "object 'player' does not exist", true);
	@ASSERTEQ(192,    player.x, "player x 2", false);
	@ASSERTEQ(1760.4, player.y, "player y 2", false); // Seems like falling starts 1 frame later when loading an online save? Would've expected to see 1760+0.4+0.4*2 here instead.
	@ASSERTEQ(rStage01, room, "room 2", false);		

$$script_ASSERT_LOCATION_3
	@ASSERT(instance_exists(player), "object 'player' does not exist", true);
	@ASSERTEQ(192, player.x, "player x 3", false);
	// Seems like here the player is falling for 3 frames? why was he falling for 1 frame the other times?
	// none of this makes sense to me but also it doesn't matter enough how many frames exactly the player fell.
	// If it's off by one or 2 when loading an online save, no one is going to notice.
	// Could be a problem if the online save logic changes but I guess that can be dealt with whenever this test breaks.
	@ASSERTEQ(1760+0.4+0.4*2+0.4*3, player.y, "player y 3", false);
	@ASSERTEQ(rStage01, room, "room 3", false);		

$$pre_worldCreate
	@name="Test";
	@password="";
	@race=false;

$$post_TestGameBegin
	if (@vars_loaded == false) {
		ds_list_add(@vars, 0);
	}
	@step = ds_list_find_value(@vars, 0);

$$post_TestStep
	@step += 1;
	ds_list_replace(@vars, 0, @step);

	if (@step == 5) {
		room_goto(rStage01); // Autosaves, we need to wait out the save delay in order to expect another save message
	} else if (@step == 10) {
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		@SERVER_EXPECT("save_game");
		with (player) {
			x = 192;
			y = 1760;
		}
		// Same thing the save point does, though in Step instead of On Collision with Bullet
		saveGame(0);
	} else if (@step == 12) {
		@SERVER_RESPOND("saved_384_1760");
	} else if (@step == 14) {
		if (instance_number(@playerSaved) != 1) {
			@ASSERTEQ(1, instance_number(@playerSaved), "saved instance count", false); // Will fail
		} else {
			@ASSERTEQ("test2 saved!", @playerSaved.@text, "saved text", false);
		}
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all();
		saveGame(true);
		loadGame();
	} else if (@step == 16) {
		@ASSERT_LOCATION_1();
	} else if (@step == 18) {
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all();
		saveGame(true);
		loadGame();
	} else if (@step == 20) {
		// We loaded again without saving, player should be back on the original save
		@ASSERT_LOCATION_2();
		@SERVER_RESPOND("saved_384_1760");
	} else if (@step == 22) {
		@ASSERT(file_exists("tempOnline2"), "tempOnline2 does not exist", false);
		// Same thing the save point does, though in Step instead of On Collision with Bullet
		saveGame(0);
	} else if (@step == 24) {
		// Same thing pressing R does, though in Step instead of World/Button 'R' Pressed
		sound_stop_all();
		saveGame(true);
		loadGame();
	} else if (@step == 26) {
		// We received an online save, but then saved ourselves, reloading should take us to our save
		@ASSERT_LOCATION_3();
	} else if (@step == 28) {
		// Location is inside a block so we don't expect x/y to change when the saving starts happening.
		with (player) {
			x = 128;
			y = 1472.5;
			xprevious = x;
			yprevious = y;
		}
		// Note: I was considering changing this behavior to send a new save every couple of frames instead of only once.
		// This test will break when that happens and needs to be adjusted.
		// First a save_game2 is expected (once, not being repeated for every frame)
		@SERVER_EXPECT("save_game2");
		// then a save_game after a short delay of not saving and moving back to the 192, 1760 location
		@SERVER_EXPECT("save_game");
	} else if (@step > 30 && @step < 80) {
		// Save every frame for 50 frames, to test for the save delay working and autosaves like that not kicking the player
		saveGame(0); // Same thing the save point does, though in Step instead of On Collision with Bullet
	} else if (@step == 85) {
		@ASSERT(instance_exists(player), "object 'player' does not exist", true);
		with (player) {
			x = 192;
			y = 1760;
		}
		// Same thing the save point does, though in Step instead of On Collision with Bullet
		saveGame(0);
	} else if (@step == 90) {
		@PASS();
	}
